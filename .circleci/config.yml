version: 2.0

aliases:
  - &nodejs-docker-image
    - image: circleci/node:8.12.0
  
  - &restore_cache
    restore_cache:
      name: Restore node_modules cache
      keys:
        - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - node-v1-{{ .Branch }}-
        - node-v1-

jobs:
  setup:
    docker: *nodejs-docker-image
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Install NPM
          command: |
            echo 'Installing dependencies'
            npm install
      - save_cache: 
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
  
  lint: 
    docker: *nodejs-docker-image
    steps:
      - checkout
      - *restore_cache
      - run:
          name: TS Lint
          command: npm run tslint:ci

  unit-tests:
    docker: *nodejs-docker-image
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Unit tests
          command: npm run test:ci:coverage
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"  
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
      # - store_test_results:
      #     path: test-results
      # - store_artifacts:
      #     path: test-results.xml
      #     prefix: tests
      # - store_artifacts:
      #     path: coverage
      #     prefix: coverage


  e2e-tests:
    docker: *nodejs-docker-image
    steps:
      - checkout
      - *restore_cache
      - run:
          name: Unit tests
          command: npm run test:coverage

  build-and-push-docker-image:
    machine: true
    steps:
      - checkout
      - run:
          name: Building and pushing image to Docker Hub
          command: |
            echo '${CIRCLE_BUILD_NUM}'
            echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> $BASH_ENV
            echo 'export IMAGE_NAME=python-circleci-docker' >> $BASH_ENV
            docker build -t edsonalcala/solid-api:1 .
            echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USER --password-stdin
            docker push edsonalcala/solid-api:1

  publish-to-GKE:
    docker: *nodejs-docker-image
    steps:
      - checkout
      - run:
          name: Publishing new version
          command: "Echo publishing to GKE"

workflows:
  version: 2
  build-deploy:
    jobs:
      - setup
      - lint:
          requires:
            - setup
      - unit-tests:
          requires:
            - setup
      - e2e-tests:
          requires:
            - setup
      - build-and-push-docker-image:
          context: SolidStudio
          requires:
            - setup
            # - integration-tests
            # - unit-tests
            # - e2e tests 
      - publish-to-GKE:
          requires:
            - build-and-push-docker-image
          filters:
            branches:
              only: master